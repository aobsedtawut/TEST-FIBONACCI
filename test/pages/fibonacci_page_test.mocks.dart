// Mocks generated by Mockito 5.4.5 from annotations
// in finonacci_test/test/pages/fibonacci_page_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:finonacci_test/domain/entity/fibonacci_item.dart' as _i3;
import 'package:finonacci_test/domain/repositories/fibonacci_repository.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [FibonacciRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockFibonacciRepository extends _i1.Mock
    implements _i2.FibonacciRepository {
  @override
  List<_i3.FibonacciItem> generateFibonacciNumbers(int? count) =>
      (super.noSuchMethod(
            Invocation.method(#generateFibonacciNumbers, [count]),
            returnValue: <_i3.FibonacciItem>[],
            returnValueForMissingStub: <_i3.FibonacciItem>[],
          )
          as List<_i3.FibonacciItem>);

  @override
  List<_i3.FibonacciItem> filterByType(
    String? type,
    List<_i3.FibonacciItem>? items,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#filterByType, [type, items]),
            returnValue: <_i3.FibonacciItem>[],
            returnValueForMissingStub: <_i3.FibonacciItem>[],
          )
          as List<_i3.FibonacciItem>);

  @override
  List<_i3.FibonacciItem> highlightItem(
    int? number,
    List<_i3.FibonacciItem>? items,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#highlightItem, [number, items]),
            returnValue: <_i3.FibonacciItem>[],
            returnValueForMissingStub: <_i3.FibonacciItem>[],
          )
          as List<_i3.FibonacciItem>);
}
